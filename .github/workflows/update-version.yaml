name: Update Version

on:
  push:
    branches:
      - develop
    paths:
      - 'VERSION'

jobs:
  update-readme-version:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Check for merge commit
        id: check_merge
        run: |
          if [ "$(git rev-list --count HEAD^@)" -gt 1 ]; then
            echo "This is a merge commit. Skipping workflow."
            exit 0
          fi

      - name: Read version from VERSION file
        id: read_version
        run: |
          NEW_VERSION=$(cat VERSION)
          echo "New version is $NEW_VERSION"
          echo "::set-output name=NEW_VERSION::$NEW_VERSION"

      - name: Get the branch name
        id: get_branch
        run: |
          BRANCH_NAME=$(echo $GITHUB_REF | sed 's/refs\/heads\///')
          echo "::set-output name=BRANCH_NAME::$BRANCH_NAME"

      - name: Update README.md with new version
        run: |
          NEW_VERSION=${{ steps.read_version.outputs.NEW_VERSION }}
          sed -i "s/# Shiba (v[0-9]*\.[0-9]*\.[0-9]*)/# Shiba (${NEW_VERSION})/" README.md

      - name: Update Shiba with new version
        run: |
          NEW_VERSION=${{ steps.read_version.outputs.NEW_VERSION }}
          sed -i "s/VERSION = \"v[0-9]*\.[0-9]*\.[0-9]*\"/VERSION = \"${NEW_VERSION}\"/" shiba.py

      - name: Update scShiba with new version
        run: |
          NEW_VERSION=${{ steps.read_version.outputs.NEW_VERSION }}
          sed -i "s/VERSION = \"v[0-9]*\.[0-9]*\.[0-9]*\"/VERSION = \"${NEW_VERSION}\"/" scshiba.py

      - name: Update SnakeShiba with new version
        run: |
          NEW_VERSION=${{ steps.read_version.outputs.NEW_VERSION }}
          sed -i "s/VERSION = \"v[0-9]*\.[0-9]*\.[0-9]*\"/VERSION = \"${NEW_VERSION}\"/" snakeshiba.smk

      - name: Update SnakeScShiba with new version
        run: |
          NEW_VERSION=${{ steps.read_version.outputs.NEW_VERSION }}
          sed -i "s/VERSION = \"v[0-9]*\.[0-9]*\.[0-9]*\"/VERSION = \"${NEW_VERSION}\"/" snakescshiba.smk

      - name: Update Dockerfile with new version
        run: |
          NEW_VERSION=${{ steps.read_version.outputs.NEW_VERSION }}
          sed -i "s/v[0-9]*\.[0-9]*\.[0-9]*/${NEW_VERSION}/" docker/Dockerfile

      - name: Update docs
        run: |
          NEW_VERSION=${{ steps.read_version.outputs.NEW_VERSION }}
          sed -i "s/v[0-9]*\.[0-9]*\.[0-9]*/${NEW_VERSION}/" docs/usage/shiba.md
          sed -i "s/v[0-9]*\.[0-9]*\.[0-9]*/${NEW_VERSION}/" docs/usage/scshiba.md

      - name: Commit changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md shiba.py scshiba.py snakeshiba.smk snakescshiba.smk docker/Dockerfile docs/usage/shiba.md docs/usage/scshiba.md
          git commit -m "actions: Ready for ${{ steps.read_version.outputs.NEW_VERSION }}"
          git push origin HEAD:${{ steps.get_branch.outputs.BRANCH_NAME }}